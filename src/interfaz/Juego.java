/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaz;

import java.awt.Graphics;
import java.awt.Image;
import static java.lang.Math.random;
import static java.lang.StrictMath.random;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import negocio.Mario;

/**
 *
 * @author JUAN
 */
public class Juego extends javax.swing.JFrame {

    Mario miMario;
    private boolean colision = false;

    public Juego() {
        initComponents();
        this.setLocationRelativeTo(this);
        miMario = new Mario();
        SetImageLabel(personaje, miMario.getImagen());
        mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new FondoPanel();
        personaje = new javax.swing.JLabel();
        enemigo = new javax.swing.JLabel();
        poder = new javax.swing.JLabel();
        poder2 = new javax.swing.JLabel();
        hongo = new javax.swing.JButton();
        pluma = new javax.swing.JButton();
        traje = new javax.swing.JButton();
        daño = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        mensaje = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        mensajeEstado = new javax.swing.JTextField();
        convertir = new javax.swing.JButton();
        revertir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 153, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(poder2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personaje, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(poder, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enemigo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(poder2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(poder, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enemigo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(personaje, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        hongo.setText("recoger HONGO");
        hongo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hongoActionPerformed(evt);
            }
        });

        pluma.setText("recoger PLUMA");
        pluma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plumaActionPerformed(evt);
            }
        });

        traje.setText("recoger TRAJE ");
        traje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trajeActionPerformed(evt);
            }
        });

        daño.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        daño.setText("recibir DAÑO");
        daño.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dañoActionPerformed(evt);
            }
        });

        jLabel1.setText("MENSAJE :");

        mensaje.setEditable(false);
        mensaje.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mensaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensajeActionPerformed(evt);
            }
        });

        jLabel2.setText("ESTADO ACTUAL:");

        mensajeEstado.setEditable(false);
        mensajeEstado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mensajeEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensajeEstadoActionPerformed(evt);
            }
        });

        convertir.setText("convertir TRAJE");
        convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertirActionPerformed(evt);
            }
        });

        revertir.setText("revertir TRAJE");
        revertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revertirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(daño, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(pluma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hongo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(traje, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(convertir, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(revertir, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mensajeEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 111, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(mensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hongo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(pluma, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(traje, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(convertir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(revertir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135)
                        .addComponent(daño, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(51, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(mensajeEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hongoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hongoActionPerformed

        SetImageLabel(poder, "/img/hongo.png");
        moverPoderIzquierda(poder);

        ///////////////////////
        miMario.recogerHongo();

    }//GEN-LAST:event_hongoActionPerformed

    private void mensajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensajeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mensajeActionPerformed

    private void plumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plumaActionPerformed
        SetImageLabel(poder2, "/img/pluma.png");
        moverPoderAbajo(poder2);

        ////////////////////////
        miMario.recogerPluma();
    }//GEN-LAST:event_plumaActionPerformed

    private void dañoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dañoActionPerformed
        Random random = new Random();
        int num = random.nextInt(3); 
        
        switch (num) {
            case 0:
                SetImageLabel(enemigo, "/img/gumba.png");
                break;
            case 1:
                SetImageLabel(enemigo, "/img/tortuga.png");
                break;
            case 2:
                SetImageLabel(enemigo, "/img/bala.png");
                break;
            default:
                SetImageLabel(enemigo, "/img/bala.png");
                break;
        } 
        moverEnemigoIzquierda(enemigo);

        ////////////////////////
        miMario.recibirDaño();
    }//GEN-LAST:event_dañoActionPerformed

    private void trajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trajeActionPerformed

        SetImageLabel(poder, "/img/trajeTanooki.png");
        moverPoderIzquierda(poder);

        /////////////////////////
        miMario.recogerTraje();
    }//GEN-LAST:event_trajeActionPerformed

    private void mensajeEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensajeEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mensajeEstadoActionPerformed

    private void convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertirActionPerformed
        miMario.convertirTraje();
        ///////////////////////////////
        
        SetImageLabel(personaje, miMario.getImagen());
        mensaje.setText(miMario.getMensaje());
        mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());

    }//GEN-LAST:event_convertirActionPerformed

    private void revertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revertirActionPerformed
        miMario.revertirTraje();
        //////////////////////////////
        SetImageLabel(personaje, miMario.getImagen());
        mensaje.setText(miMario.getMensaje());
        mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());
    }//GEN-LAST:event_revertirActionPerformed

    private void moverPoderAbajo(JLabel label) {
        Timer timer = new Timer(25, null); // Intervalo de 100 milisegundos     
        timer.addActionListener(e -> {
            int x = label.getX();
            int y = label.getY();

            if (personaje.getY() >= y + label.getHeight()) {
                label.setLocation(x, y + 8);
            } else {
                SetImageLabel(personaje, miMario.getImagen());
                mensaje.setText(miMario.getMensaje());
                mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());
                label.setIcon(null);
                ((Timer) e.getSource()).stop(); // Detener el timer cuando llegue al límite
            }
        });
        timer.start();
    }

    private void moverPoderIzquierda(JLabel label) {
        Timer timer = new Timer(25, null); // Intervalo de 100 milisegundos     
        timer.addActionListener(e -> {
            int x = label.getX();
            int y = label.getY();

            if (personaje.getX() + personaje.getWidth() <= x) {
                label.setLocation(x - 8, y);
            } else {
                SetImageLabel(personaje, miMario.getImagen());
                mensaje.setText(miMario.getMensaje());
                mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());
                label.setIcon(null);
                ((Timer) e.getSource()).stop(); // Detener el timer cuando llegue al límite
            }
        });
        timer.start();
    }

    private void moverEnemigoIzquierda(JLabel label) {
        colision = false;
        Timer timer = new Timer(22, null); // Intervalo de 100 milisegundos     
        timer.addActionListener(e -> {
            int x = label.getX();
            int y = label.getY();

            if (x > 0) {
                label.setLocation(x - 8, y); // Mover el JLabel 5 píxeles a la izquierda
                if (!colision && personaje.getX() + personaje.getWidth() >= x) {
                    colision = !colision;
                    SetImageLabel(personaje, miMario.getImagen());
                    mensaje.setText(miMario.getMensaje());
                    mensajeEstado.setText(miMario.getEstado().getClass().getSimpleName());
                    
                }
            } else {
                label.setIcon(null);
                ((Timer) e.getSource()).stop(); // Detener el timer cuando llegue al límite          
            }
        });
        timer.start();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Juego.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Juego().setVisible(true);
            }
        });
    }

    public void SetImageLabel(JLabel labelName, String root) {
        ImageIcon image = new ImageIcon(getClass().getResource(root));
        Icon icon = new ImageIcon(
                image.getImage().getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_DEFAULT)
        );
        labelName.setIcon(icon);
        this.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton convertir;
    private javax.swing.JButton daño;
    private javax.swing.JLabel enemigo;
    private javax.swing.JButton hongo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mensaje;
    private javax.swing.JTextField mensajeEstado;
    private javax.swing.JLabel personaje;
    private javax.swing.JButton pluma;
    private javax.swing.JLabel poder;
    private javax.swing.JLabel poder2;
    private javax.swing.JButton revertir;
    private javax.swing.JButton traje;
    // End of variables declaration//GEN-END:variables

    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            imagen = new ImageIcon(getClass().getResource("/img/escenario.jpg")).getImage();
            g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);
            setOpaque(false);
            super.paint(g);
        }
    }

}
